import{_ as c,r as o,o as r,c as l,a as e,d as a,w as t,b as n,e as d}from"./app.7f741596.js";const p="/assets/idemeum-svc-deny-interactive-login.12700432.png",u="/assets/idemeum-remote-access-cert.80a40977.png",m="/assets/import-idemeum-remote-access-cert.056af978.png",h="/assets/enable-smart-cart-authentication.d6e837c9.png",v="/assets/open-firewall-to-inbound-rdp-connections.6afbca72.png",g={},b=e("h1",{id:"domain-controller-configuration",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#domain-controller-configuration","aria-hidden":"true"},"#"),n(" Domain Controller Configuration")],-1),k={class:"table-of-contents"},f=e("h2",{id:"overview",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#overview","aria-hidden":"true"},"#"),n(" Overview")],-1),w=e("p",null,"In order to use idemeum for passwordless access to remote desktops in your private network there are few things that need to be configured on your Domain Controller server.",-1),y=e("h2",{id:"prerequisites",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#prerequisites","aria-hidden":"true"},"#"),n(" Prerequisites")],-1),A={class:"custom-container warning"},D=e("p",{class:"custom-container-title"},"Remote Desktops need to be connected to an Active Directory domain",-1),C=e("li",null,"idemeum can only provide remote access to Windows desktops that are connected to an Active Directory domain. The Active Directory domain should be configured for LDAPS connections.",-1),P={href:"https://learn.microsoft.com/en-us/windows-server/identity/ad-cs/",target:"_blank",rel:"noopener noreferrer"},S=e("li",null,"The supported Windows versions are: Windows Server 2012 R2 / Windows 10 or newer",-1),N=d(`<h2 id="active-directory-configuration" tabindex="-1"><a class="header-anchor" href="#active-directory-configuration" aria-hidden="true">#</a> Active Directory Configuration</h2><h3 id="setup-active-directory" tabindex="-1"><a class="header-anchor" href="#setup-active-directory" aria-hidden="true">#</a> Setup Active Directory</h3><div class="custom-container tip"><p class="custom-container-title">Do you have Active Directory configured?</p><p>If you already have an active directory setup you can skip to the next step.</p></div><p>If you are setting up a fresh Active Directory domain the on the Windows server where you want to install the Active Directory run the following Powershell script. The Windows Server has to have TPM support.</p><p>In the script below please set the <code>$domain</code> variable to your domain name.</p><div class="language-powershell ext-powershell line-numbers-mode"><pre class="language-powershell"><code><span class="token variable">$ErrorActionPreference</span> = <span class="token string">&quot;Stop&quot;</span>

<span class="token variable">$domain</span> = <span class="token string">&#39;idemeumdemo.com&#39;</span>
<span class="token variable">$netbiosDomain</span> = <span class="token punctuation">(</span><span class="token variable">$domain</span> <span class="token operator">-</span>split <span class="token string">&#39;\\.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span>0<span class="token punctuation">]</span><span class="token punctuation">.</span>ToUpperInvariant<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token function">echo</span> <span class="token string">&#39;Installing the AD services and administration tools...&#39;</span>
<span class="token function">Install-WindowsFeature</span> AD-Domain-Services<span class="token punctuation">,</span>RSAT-AD-AdminCenter<span class="token punctuation">,</span>RSAT-ADDS-Tools

<span class="token function">echo</span> <span class="token string">&#39;Installing AD DS (be patient, this may take a while to install)...&#39;</span>
<span class="token function">Import-Module</span> ADDSDeployment
<span class="token function">Install-ADDSForest</span> \`
    <span class="token operator">-</span>InstallDns \`
    <span class="token operator">-</span>CreateDnsDelegation:<span class="token boolean">$false</span> \`
    <span class="token operator">-</span>ForestMode <span class="token string">&#39;Default&#39;</span> \`
    <span class="token operator">-</span>DomainMode <span class="token string">&#39;Default&#39;</span> \`
    <span class="token operator">-</span>DomainName <span class="token variable">$domain</span> \`
    <span class="token operator">-</span>DomainNetbiosName <span class="token variable">$netbiosDomain</span> \`
    <span class="token operator">-</span>SafeModeAdministratorPassword <span class="token punctuation">(</span><span class="token function">Read-Host</span> <span class="token string">&quot;Enter Your Password&quot;</span> <span class="token operator">-</span>AsSecureString<span class="token punctuation">)</span> \`
    <span class="token operator">-</span>NoRebootOnCompletion \`
    <span class="token operator">-</span>Force

<span class="token function">Restart-Computer</span> <span class="token operator">-</span>Force
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="enable-active-directory-certificate-authority" tabindex="-1"><a class="header-anchor" href="#enable-active-directory-certificate-authority" aria-hidden="true">#</a> Enable Active Directory Certificate Authority</h3><p>In order to enable the Certificate Authority you need to run the following powershell script:</p><div class="language-powershell ext-powershell line-numbers-mode"><pre class="language-powershell"><code><span class="token variable">$ErrorActionPreference</span> = <span class="token string">&quot;Stop&quot;</span>

<span class="token function">Add-WindowsFeature</span> Adcs-Cert-Authority <span class="token operator">-</span>IncludeManagementTools
<span class="token function">Install-AdcsCertificationAuthority</span> <span class="token operator">-</span>CAType EnterpriseRootCA <span class="token operator">-</span>HashAlgorithmName SHA384 <span class="token operator">-</span>Force
<span class="token function">Restart-Computer</span> <span class="token operator">-</span>Force
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="create-a-restrictive-service-account" tabindex="-1"><a class="header-anchor" href="#create-a-restrictive-service-account" aria-hidden="true">#</a> Create a restrictive service account</h3><p>Idemeum requires a service account to connect to your Active Directory domain. We recommend creating a dedicated service account with restrictive permissions for maximum security.</p><p>To create the service account, open a PowerShell prompt and copy-paste in the commands below. <strong>A password for this service account will be randomly generated, but immediately discarded. Idemeum does not need this password,</strong> as it uses x509 certificates for LDAP authentication. You can reset the password for this account should you need to perform password authentication.</p><div class="language-powershell ext-powershell line-numbers-mode"><pre class="language-powershell"><code><span class="token comment">#Creates an idemeum service account</span>
<span class="token variable">$Name</span>=<span class="token string">&quot;Idemeum Service Account&quot;</span>
<span class="token variable">$SamAccountName</span>=<span class="token string">&quot;svc-idemeum&quot;</span>

<span class="token comment"># Generate a random password that meets the &quot;Password must meet complexity requirements&quot; security policy setting.</span>
<span class="token comment"># Note: if the minimum complexity requirements have been changed from the Windows default, this part of the script may need to be modified.</span>
<span class="token function">Add-Type</span> <span class="token operator">-</span>AssemblyName <span class="token string">&#39;System.Web&#39;</span>
<span class="token keyword">do</span> <span class="token punctuation">{</span>
   <span class="token variable">$Password</span>=<span class="token namespace">[System.Web.Security.Membership]</span>::GeneratePassword<span class="token punctuation">(</span>15<span class="token punctuation">,</span>1<span class="token punctuation">)</span>
<span class="token punctuation">}</span> <span class="token keyword">until</span> <span class="token punctuation">(</span><span class="token variable">$Password</span> <span class="token operator">-match</span> <span class="token string">&#39;\\d&#39;</span><span class="token punctuation">)</span>
<span class="token variable">$SecureStringPassword</span>=<span class="token function">ConvertTo-SecureString</span> <span class="token variable">$Password</span> <span class="token operator">-</span>AsPlainText <span class="token operator">-</span>Force

<span class="token function">New-ADUser</span> \`
  <span class="token operator">-</span>Name <span class="token variable">$Name</span> \`
  <span class="token operator">-</span>SamAccountName <span class="token variable">$SamAccountName</span> \`
  <span class="token operator">-</span>AccountPassword <span class="token variable">$SecureStringPassword</span> \`
  <span class="token operator">-</span>Enabled <span class="token boolean">$true</span>


<span class="token comment">#Now limit the service account&#39;s permission</span>
<span class="token comment"># Save your domain&#39;s distinguished name to a variable.</span>
<span class="token variable">$DomainDN</span>=$<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">Get-ADDomain</span><span class="token punctuation">)</span><span class="token punctuation">.</span>DistinguishedName<span class="token punctuation">)</span>

<span class="token comment"># Create the CDP/Idemeum container.</span>
<span class="token comment"># If the command fails with &quot;New-ADObject : An attempt was made to add an object to the directory with a name that is already in use&quot;,</span>
<span class="token comment"># it means the object already exists and you can move on to the next step.</span>
<span class="token function">New-ADObject</span> <span class="token operator">-</span>Name <span class="token string">&quot;Idemeum&quot;</span> <span class="token operator">-</span><span class="token function">Type</span> <span class="token string">&quot;container&quot;</span> <span class="token operator">-</span>Path <span class="token string">&quot;CN=CDP,CN=Public Key Services,CN=Services,CN=Configuration,<span class="token variable">$DomainDN</span>&quot;</span>

<span class="token comment"># Gives Idemeum the ability to create LDAP containers in the CDP container.</span>
dsacls <span class="token string">&quot;CN=CDP,CN=Public Key Services,CN=Services,CN=Configuration,<span class="token variable">$DomainDN</span>&quot;</span> <span class="token operator">/</span>I:T <span class="token operator">/</span>G <span class="token string">&quot;<span class="token function">$<span class="token punctuation">(</span><span class="token variable">$SamAccountName</span><span class="token punctuation">)</span></span>:CC;container;&quot;</span>
<span class="token comment"># Gives Idemeum the ability to create and delete cRLDistributionPoint objects in the CDP/Idemeum container.</span>
dsacls <span class="token string">&quot;CN=Idemeum,CN=CDP,CN=Public Key Services,CN=Services,CN=Configuration,<span class="token variable">$DomainDN</span>&quot;</span> <span class="token operator">/</span>I:T <span class="token operator">/</span>G <span class="token string">&quot;<span class="token function">$<span class="token punctuation">(</span><span class="token variable">$SamAccountName</span><span class="token punctuation">)</span></span>:CCDC;cRLDistributionPoint;&quot;</span>
<span class="token comment"># Gives Idemeum the ability to write the certificateRevocationList property in the CDP/Idemeum container.</span>
dsacls <span class="token string">&quot;CN=Idemeum,CN=CDP,CN=Public Key Services,CN=Services,CN=Configuration,<span class="token variable">$DomainDN</span> &quot;</span> <span class="token operator">/</span>I:T <span class="token operator">/</span>G <span class="token string">&quot;<span class="token function">$<span class="token punctuation">(</span><span class="token variable">$SamAccountName</span><span class="token punctuation">)</span></span>:WP;certificateRevocationList;&quot;</span>
<span class="token comment"># Gives Idemeum the ability to create and delete certificationAuthority objects in the NTAuthCertificates container.</span>
dsacls <span class="token string">&quot;CN=NTAuthCertificates,CN=Public Key Services,CN=Services,CN=Configuration,<span class="token variable">$DomainDN</span>&quot;</span> <span class="token operator">/</span>I:T <span class="token operator">/</span>G <span class="token string">&quot;<span class="token function">$<span class="token punctuation">(</span><span class="token variable">$SamAccountName</span><span class="token punctuation">)</span></span>:CCDC;certificationAuthority;&quot;</span>
<span class="token comment"># Gives Idemeum the ability to write the cACertificate property in the NTAuthCertificates container.</span>
dsacls <span class="token string">&quot;CN=NTAuthCertificates,CN=Public Key Services,CN=Services,CN=Configuration,<span class="token variable">$DomainDN</span>&quot;</span> <span class="token operator">/</span>I:T <span class="token operator">/</span>G <span class="token string">&quot;<span class="token function">$<span class="token punctuation">(</span><span class="token variable">$SamAccountName</span><span class="token punctuation">)</span></span>:WP;cACertificate;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="do-not-allow-interactive-login-for-idemeum-service-account" tabindex="-1"><a class="header-anchor" href="#do-not-allow-interactive-login-for-idemeum-service-account" aria-hidden="true">#</a> Do not allow interactive login for idemeum service account</h3><p>idemeum service account is only needed to authenticate over LDAP. We should not allow interactive login using this account, like your regular users. In order to restrict the interactive login we need to create a new Group Policy Object (GPO) linked to your entire domain, and then deny it interactive login.</p><h4 id="step-1-create-the-group-policy-object" tabindex="-1"><a class="header-anchor" href="#step-1-create-the-group-policy-object" aria-hidden="true">#</a> Step 1: Create the Group Policy object</h4><p>Open a PowerShell prompt and change the <code>$GPOName</code> .variable below to your desired GPO name, or leave the recommended name:</p><div class="language-powershell ext-powershell line-numbers-mode"><pre class="language-powershell"><code><span class="token variable">$GPOName</span>=<span class="token string">&quot;Block svc-idemeum Interactive Login&quot;</span>
<span class="token comment"># Create the new GPO and link with target domain</span>
<span class="token function">New-GPO</span> <span class="token operator">-</span>Name <span class="token variable">$GPOName</span> <span class="token punctuation">|</span> <span class="token function">New-GPLink</span> <span class="token operator">-</span>Target $<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">Get-ADDomain</span><span class="token punctuation">)</span><span class="token punctuation">.</span>DistinguishedName<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="step-2-deny-interactive-login" tabindex="-1"><a class="header-anchor" href="#step-2-deny-interactive-login" aria-hidden="true">#</a> Step 2: Deny Interactive Login</h4><ol><li>Open the program named\xA0<code>Group Policy Management</code>\xA0and find the GPO you just created (<code>$FOREST &gt; Domains &gt; $DOMAIN &gt; Group Policy Objects &gt; Block idemeum-svc Interactive Login</code>), right-click on it and select\xA0<code>Edit...</code>\xA0from the context menu.</li><li>Select: <code>Computer Configuration &gt; Policies &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment</code></li><li>Double click\xA0<code>Deny log on locally</code>\xA0and in the popup, check\xA0<code>Define these policy settings</code>.</li><li>Then click\xA0<code>Add User or Group...</code>,\xA0<code>Browse ...</code>, enter the SAM account name of the user you created above (<code>svc-idemeum</code>) and hit\xA0<code>Check Names</code>\xA0select your Group, and then hit\xA0<code>OK</code>\xA0on all the windows.</li><li>Repeat steps 3 and 4 for\xA0<code>Deny log on through Remote Desktop Services</code>\xA0(in lieu of\xA0<code>Deny log on locally</code>).</li></ol><p><img src="`+p+'" alt="Deny interactive login"></p><div class="custom-container warning"><p class="custom-container-title">Disable username/password Authentication</p><p>For added security, consider disabling username/password authentication completely via the GPO, requiring access via idemeum\u2019s remote access virtual smart card.</p></div><h3 id="allow-connections-from-idemeum" tabindex="-1"><a class="header-anchor" href="#allow-connections-from-idemeum" aria-hidden="true">#</a> Allow connections from idemeum</h3><p>We need to configure Active Directory to accept and allow remote desktop connections from idemeum. This includes telling your computers to trust Idemeum CA, allowing the certificate-based smart card authentication, and ensuring RDP is enabled.</p><h4 id="step-1-export-idemeum-certificate" tabindex="-1"><a class="header-anchor" href="#step-1-export-idemeum-certificate" aria-hidden="true">#</a> Step 1: Export Idemeum certificate</h4><p>As an admin login to the Admin portal and from <code>Applications -&gt; Metadata</code> page you can download the idemeum Remote Access certificate on your Windows machine. You can click the download button and download it in der format or copy it as a pem format and use an online tool to convert it to a der format.</p><p><img src="'+u+`" alt="Download Idemeum Remote Access cert"></p><h4 id="step-2-create-a-new-gpo-with-idemeum-as-root-ca" tabindex="-1"><a class="header-anchor" href="#step-2-create-a-new-gpo-with-idemeum-as-root-ca" aria-hidden="true">#</a> Step 2: Create a new GPO with Idemeum as Root CA</h4><p>Open a powershell editor and run the following script:</p><div class="language-powershell ext-powershell line-numbers-mode"><pre class="language-powershell"><code><span class="token variable">$GPOName</span>=<span class="token string">&quot;Idemeum Access Policy&quot;</span>
<span class="token function">New-GPO</span> <span class="token operator">-</span>Name <span class="token variable">$GPOName</span> <span class="token punctuation">|</span> <span class="token function">New-GPLink</span> <span class="token operator">-</span>Target $<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">Get-ADDomain</span><span class="token punctuation">)</span><span class="token punctuation">.</span>DistinguishedName<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>Open the\xA0<code>Group Policy Management</code>\xA0application, and on the left pane, navigate to\xA0<code>$FOREST &gt; Domains &gt; $DOMAIN &gt; Group Policy Objects</code>.</li><li>Right click on the GPO you just made (<code>Idemeum Access Policy</code>), and select\xA0<code>Edit...</code>.</li><li>In the group policy editor, select:</li></ol><p><code>Computer Configuration &gt; Policies &gt; Windows Settings &gt; Security Settings &gt; Public Key Policies</code></p><ol><li>Right click on\xA0<code>Trusted Root Certification Authorities</code>\xA0and select\xA0<code>Import</code>.</li><li>Click through the wizard, selecting the certificate file in the der format that you downloaded from idemeum admin portal</li></ol><p><img src="`+m+`" alt="Import Idemeum Remote Access cert"></p><h4 id="step-3-publish-the-idemeum-ca-to-the-active-directory-domain" tabindex="-1"><a class="header-anchor" href="#step-3-publish-the-idemeum-ca-to-the-active-directory-domain" aria-hidden="true">#</a> Step 3: Publish the Idemeum CA to the Active Directory domain</h4><p>On a machine which is joined to your domain and logged in as an account in the\xA0<code>Domain Administrators</code>\xA0group, run the two commands below at a PowerShell prompt to publish the Idemeum CA to your Active Directory domain (PathToCertFile.der is the path to where you have locally saved the Idemeum certificate):</p><div class="language-powershell ext-powershell line-numbers-mode"><pre class="language-powershell"><code>certutil \u2013dspublish \u2013f &lt;PathToCertFile<span class="token punctuation">.</span>der&gt; RootCA
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This step enables the domain controllers to trust the Idemeum CA, which will allow smart card logons via Idemeum to succeed.</p><div class="custom-container warning"><p class="custom-container-title">For AWS Active directory</p><p>When using AWS Managed Active Directory, you should run the command above using an account which is part of the\xA0AWS Delegated Domain Administrators\xA0group, such as the AWS-provided\xA0admin\xA0account.</p></div><h4 id="step-4-publish-the-idemeum-ca-to-the-ntauth-store" tabindex="-1"><a class="header-anchor" href="#step-4-publish-the-idemeum-ca-to-the-ntauth-store" aria-hidden="true">#</a> Step 4: Publish the Idemeum CA to the NTAuth Store</h4><p>In order for authentication with idemeum-issued certificates to succeed, the Idemeum CA needs to be published to the enterprise NTAuth store. Idemeum will periodically publish its CA after it is able to authenticate, but this step needs to be performed manually the first time in order for Idemeum to have LDAP access.</p><p>Open powershell and run the following script.</p><div class="language-powershell ext-powershell line-numbers-mode"><pre class="language-powershell"><code>certutil \u2013dspublish \u2013f &lt;PathToCertFile<span class="token punctuation">.</span>der&gt; NTAuthCA
<span class="token comment">#Force the retrieval of the CA from LDAP. While this step is not required, it speeds up the process and allows you to proceed to the next steps without waiting for the certificate to propagate.</span>
certutil <span class="token operator">-</span>pulse
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="enable-smart-card-service" tabindex="-1"><a class="header-anchor" href="#enable-smart-card-service" aria-hidden="true">#</a> Enable Smart Card service</h3><p>Idemeum performs certificate based authentication by emulating a smart card.</p><ol><li>Open the Group Policy Management application and edit your\xA0<code>Idemeum Access Policy</code>.</li><li>Select <code>Computer Configuration &gt; Policies &gt; Windows Settings &gt; Security Settings &gt; System Services</code></li><li>Double click on\xA0<code>Smart Card</code>, select\xA0<code>Define this policy setting</code>\xA0and switch to\xA0<code>Automatic</code>\xA0then click\xA0<code>OK</code>.</li></ol><p><img src="`+h+'" alt="Enable Smart Card authentication"></p><h3 id="open-firewall-to-inbound-rdp-connections" tabindex="-1"><a class="header-anchor" href="#open-firewall-to-inbound-rdp-connections" aria-hidden="true">#</a> Open firewall to inbound RDP connections</h3><ol><li>Open Group Policy Management and select the <code>Idemeum Access Policy</code>.</li><li>Select <code>Computer Configuration &gt; Policies &gt; Windows Settings &gt; Security Settings &gt; Windows Firewall with Advanced Security (x2)</code></li><li>Right click on\xA0<code>Inbound Rules</code>\xA0and select\xA0<code>New Rule...</code>.</li><li>Under\xA0<code>Predefined</code>\xA0select\xA0<code>Remote Desktop</code>.</li><li>Only select the rule for\xA0<code>User Mode (TCP-in)</code>.</li><li>On the next screen, select\xA0<code>Allow the connection</code>\xA0and finish.</li></ol><p><img src="'+v+`" alt="Open Firewall to inbound RDP connections"></p><h3 id="allow-remote-rdp-connections" tabindex="-1"><a class="header-anchor" href="#allow-remote-rdp-connections" aria-hidden="true">#</a> Allow remote RDP connections</h3><ol><li>Open Group Policy Management and select the <code>Idemeum Access Policy</code>.</li><li>Select <code>Computer Configuration &gt; Policies &gt; Administrative Templates &gt; Windows Components &gt; Remote Desktop Services &gt; Remote Desktop Session Host &gt; Connections</code></li><li>Right click on\xA0<code>Allow users to connect remotely by using Remote Desktop Services</code>\xA0and select\xA0<code>Edit</code>. Select\xA0<code>Enabled</code>\xA0and\xA0<code>OK</code>.</li><li>Select:<code>Computer Configuration &gt; Policies &gt; Administrative Templates &gt; Windows Components &gt; Remote Desktop Services &gt; Remote Desktop Session Host &gt; Security</code></li><li>Right click\xA0<code>Require user authentication for remote connections by using Network Level Authentication</code>, edit, select\xA0<strong><code>Disable</code></strong>\xA0and\xA0<code>OK</code>.</li></ol><h3 id="ensure-your-gpo-is-updated" tabindex="-1"><a class="header-anchor" href="#ensure-your-gpo-is-updated" aria-hidden="true">#</a> Ensure your GPO is updated</h3><p>Since we did modify the GPO ensure that all the changes are in effect by running the following script in powershell</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>gpupdate.exe /force
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,55);function I(_,q){const s=o("router-link"),i=o("ExternalLinkIcon");return r(),l("div",null,[b,e("nav",k,[e("ul",null,[e("li",null,[a(s,{to:"#overview"},{default:t(()=>[n("Overview")]),_:1})]),e("li",null,[a(s,{to:"#prerequisites"},{default:t(()=>[n("Prerequisites")]),_:1})]),e("li",null,[a(s,{to:"#active-directory-configuration"},{default:t(()=>[n("Active Directory Configuration")]),_:1}),e("ul",null,[e("li",null,[a(s,{to:"#setup-active-directory"},{default:t(()=>[n("Setup Active Directory")]),_:1})]),e("li",null,[a(s,{to:"#enable-active-directory-certificate-authority"},{default:t(()=>[n("Enable Active Directory Certificate Authority")]),_:1})]),e("li",null,[a(s,{to:"#create-a-restrictive-service-account"},{default:t(()=>[n("Create a restrictive service account")]),_:1})]),e("li",null,[a(s,{to:"#do-not-allow-interactive-login-for-idemeum-service-account"},{default:t(()=>[n("Do not allow interactive login for idemeum service account")]),_:1})]),e("li",null,[a(s,{to:"#allow-connections-from-idemeum"},{default:t(()=>[n("Allow connections from idemeum")]),_:1})]),e("li",null,[a(s,{to:"#enable-smart-card-service"},{default:t(()=>[n("Enable Smart Card service")]),_:1})]),e("li",null,[a(s,{to:"#open-firewall-to-inbound-rdp-connections"},{default:t(()=>[n("Open firewall to inbound RDP connections")]),_:1})]),e("li",null,[a(s,{to:"#allow-remote-rdp-connections"},{default:t(()=>[n("Allow remote RDP connections")]),_:1})]),e("li",null,[a(s,{to:"#ensure-your-gpo-is-updated"},{default:t(()=>[n("Ensure your GPO is updated")]),_:1})])])])])]),f,w,y,e("div",A,[D,e("ul",null,[C,e("li",null,[n("In order to support the LDAPS connections you need to configure the "),e("a",P,[n("AD CS"),a(i)]),n(". The Windows server that is running the Certificate Authority has to have Trusted Platform Module (TPM) support.")]),S])]),N])}const $=c(g,[["render",I],["__file","windows-active-domain-configuration.html.vue"]]);export{$ as default};
